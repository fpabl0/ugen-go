package ugen

import (
	"os"
	"path/filepath"
	"strings"
	"testing"
	"text/template"

	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

func Test_FromCallerPath(t *testing.T) {
	s := FromCallerPath(0)
	s1 := FromCallerPath(2)

	parts := strings.Split(s, "/")
	s1p := filepath.Join(parts[:len(parts)-2]...)
	s1p = "/" + s1p

	assert.Equal(t, s1p, s1)
}

func Test_File(t *testing.T) {
	fpath := FromCallerPath(0)
	fpath = filepath.Join(fpath, "testdata", "testfile.txt")
	f, err := NewFile(fpath, "testergen", "tester")
	require.NoError(t, err)
	require.NotNil(t, f)
	defer f.Close()

	f.WriteImports([]string{
		"github.com/fpabl0/lib1",
		"strings",
		"github.com/fpabl0/lib2",
		"context",
	})

	tmpl := template.Must(
		template.New("temp").Parse(`
func hello() string { return "{{ . }}" }
`),
	)

	err = f.WriteTemplate(tmpl, "User")
	require.NoError(t, err)

	b, err := os.ReadFile(fpath)
	require.NoError(t, err)
	require.NotNil(t, b)

	assert.Equal(t, `// auto-generated
// Code generated by 'testergen'. DO NOT EDIT.

package tester

import (
	"context"
	"strings"

	"github.com/fpabl0/lib1"
	"github.com/fpabl0/lib2"
)

func hello() string { return "User" }
`, string(b))

}
